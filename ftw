#!/bin/bash

# Where your config file is 
ftw_config="$HOME/.ftw_config"

process_file(){
	if [ ! -f $1 ]
	then
		echo "$1 is not a valid file. Exiting..."
		exit 1
	fi

	input_filepath=$1
	input_filename=$(basename -- "$input_filepath")

	input_mime=$(file --mime-type -N $input_filepath | tr -d " " | cut -d":" -f2)
	input_mimetype=$(echo $input_mime | cut -d"/" -f1)
	input_mimesubtype=$(echo $input_mime | cut -d"/" -f2)
	input_extension=${input_filename##*.}
}

get_command(){
# Extensions take priority over mime types as more specific.
# Could refactor this...

	# file extensions
	command=$(jq -r ".$input_extension" $ftw_config | grep -v null); ec=$?
	
	# mime subtypes
	if [ $ec -eq 1 ]
	then
		command=$(jq -r ".$input_mimesubtype" $ftw_config | grep -v null); ec=$?   
	fi
	
	# mime types
	if [ $ec -eq 1 ]
	then
		command=$(jq -r ".$input_mimetype" $ftw_config | grep -v null); ec=$?   
	fi
	
	# If no matches
	if [ $ec -eq 1 ]
	then
		echo "No match was found for $input_extension or MIME type $input_mime"
		exit 1
	fi

	# subsitute @a's
	command=$(echo $command | sed "s|@a|$input_filepath|g")
}

execute_command(){
	$command
}


# Main begins here
if [ ! -e "$ftw_config" ]
	then
	echo "No config file! Default location is $HOME/ftw_config"
	exit 1
fi

# Parsing args
# If only one argument given, assume it is the file to process
if [ "$#" -eq 1 ]
then
	process_file $1	
	get_command
	execute_command
	exit
fi	

